:coffeescript
  POKEMON_SIGHTINGS_API_PT = "/api/pokemon_sightings"
  GOOGLE_API_KEY = "AIzaSyA5jvS0kjANVuGMZsswMqabnigtcApwGcw"
  POKEDEX_URL= "https://pokeapi.co/api/v2/pokemon/"
  GEO_DISTANCE_URL = "https://maps.googleapis.com/maps/api/distancematrix/json"
  PokemonList = []
  PokemonLocation = []
  currLocation = undefined
  myDestination = undefined
  POKEDestinations = []
  POKESprite = []
  
  $ ->
    # console.log("#2 POKEMON SIGHTINGS")
    loadGoogleMaps()
    
  window.initMap = ()->
    # console.log "GMaps loaded"
    main()
    
  loadGoogleMaps = ()->
    script = $("<script>")
      .attr('src', 'https://maps.googleapis.com/maps/api/js?key='+GOOGLE_API_KEY+'&callback=initMap')
      .attr('async', 'async')
    $("head").append(script) 
    
  initGeolocation = ->
      if navigator and navigator.geolocation
        watchId = navigator.geolocation.watchPosition(successCallback, errorCallback, 
        enableHighAccuracy: true 
        timeout: 3000)
      else
        console.log 'Geolocation is not supported'
      return
    
    successCallback = (position) ->
      latitudePoint = position.coords.latitude
      longitudePoint = position.coords.longitude
      currLocation = new google.maps.LatLng(latitudePoint, longitudePoint)
      return
    
    errorCallback = ->
      return
      
  main = ()->
    initGeolocation()
    console.log(currLocation)
    ALT_TEXT = []
    DistanceBack = (response,status) ->
      # console.log(response)
      _.each (POKEDestinations), (dist, counter) ->
        template = $(".template").clone().removeClass("template")
        template.find(".distance").html(response.rows[0].elements[counter].distance.text)
        template.find("img").attr("src", POKESprite[counter])
        template.find("img").attr("alt", ALT_TEXT[counter])
        $("table").append(template)
      return   
      
    service = new google.maps.DistanceMatrixService()
    $.getJSON POKEMON_SIGHTINGS_API_PT, (resp)->
      # console.log "API RESPONSE", resp
      # This is what gets the list from the API 
      _.each (resp), (Pokeid)->
        PokemonList.push(Pokeid.pokemon)
        result = Pokeid.coord
        result = result.replaceAll("@","")
        result = result.split(",").slice(0,2)
        PokemonLocation.push(result)
      # This is what gets the url from the ID that we have from the previous JSON request  
      _.each (PokemonList), (ID, counter)->
        $.getJSON POKEDEX_URL+ID, (resp2)->
          POKE_INFO_API = resp2.url
          resp2["POKE_ID"] = POKE_INFO_API
          # console.log resp2
          POKESprite.push(resp2.sprites.other.dream_world.front_default)
          ALT_TEXT.push(resp2.name)
          myDestination = new google.maps.LatLng(PokemonLocation[counter][0], PokemonLocation[counter][1])
          POKEDestinations.push(myDestination)
      # this is the call to find the distance for the pokemon
      # console.log("\thello", currLocation)
      service.getDistanceMatrix {
        origins: [currLocation]
        destinations: POKEDestinations
        travelMode: 'DRIVING'
        unitSystem: google.maps.UnitSystem.IMPERIAL
      }, DistanceBack
      
       
    
    # TODO
    # 1. GRAB THE LIST OF POKEMON SIGHTINGS FROM THE POKEMON_SIGHTINGS_API_PT
    # 2. RESOLVE THE POKEMON ID TO ITS POKEMON IMAGE USING THE POKEDEX API POINT
    # 3. RESOLVE THE GPS LOCATION TO THE DISTANCE FROM YOUR CURRENT GPS LOCATION 
    # THE GOOGLE MAPS JS API HAS BEEN ALREADY LOADED FOR YOU. (google.maps)
    # 4. POPULATE THE TABLE THROUGH A TEMPLATE CLONING STRATEGY
    
          
/ DO NOT MODIFY CODE UNDER THIS LINE      
/ ----------------------------------

/ POKEMON SIGHTINGS
.ui.grid.centered
  #sightings.panel.fw
    %h1.header.ui Pokemon Sightings
    %table.fw
      / ROW TEMPLATE
      %tr.template
        %td 
          %img{src: "", alt:"todo:pokemon's name"}
        %td 
          .ui.statistic
            .label Distance Away
            .value
              %span.distance -
              
:scss
  .panel{
    margin-top: 60px;
  }
  .fw{ /* Full Width */
    width: 100%;
  }
  .template{
    display: none;
  }